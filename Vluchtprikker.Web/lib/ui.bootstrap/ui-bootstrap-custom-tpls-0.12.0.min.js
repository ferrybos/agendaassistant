angular.module("ui.bootstrap", ["ui.bootstrap.tpls", "ui.bootstrap.transition", "ui.bootstrap.modal"]), angular.module("ui.bootstrap.tpls", ["template/modal/backdrop.html", "template/modal/window.html"]), angular.module("ui.bootstrap.transition", []).factory("$transition", ["$q", "$timeout", "$rootScope", function (e, n, t) { function o(e) { for (var n in e) if (void 0 !== i.style[n]) return e[n] } var a = function (o, i, r) { r = r || {}; var l = e.defer(), d = a[r.animation ? "animationEndEventName" : "transitionEndEventName"], s = function () { t.$apply(function () { o.unbind(d, s), l.resolve(o) }) }; return d && o.bind(d, s), n(function () { angular.isString(i) ? o.addClass(i) : angular.isFunction(i) ? i(o) : angular.isObject(i) && o.css(i), d || l.resolve(o) }), l.promise.cancel = function () { d && o.unbind(d, s), l.reject("Transition cancelled") }, l.promise }, i = document.createElement("trans"), r = { WebkitTransition: "webkitTransitionEnd", MozTransition: "transitionend", OTransition: "oTransitionEnd", transition: "transitionend" }, l = { WebkitTransition: "webkitAnimationEnd", MozTransition: "animationend", OTransition: "oAnimationEnd", transition: "animationend" }; return a.transitionEndEventName = o(r), a.animationEndEventName = o(l), a }]), angular.module("ui.bootstrap.modal", ["ui.bootstrap.transition"]).factory("$$stackedMap", function () { return { createNew: function () { var e = []; return { add: function (n, t) { e.push({ key: n, value: t }) }, get: function (n) { for (var t = 0; t < e.length; t++) if (n == e[t].key) return e[t] }, keys: function () { for (var n = [], t = 0; t < e.length; t++) n.push(e[t].key); return n }, top: function () { return e[e.length - 1] }, remove: function (n) { for (var t = -1, o = 0; o < e.length; o++) if (n == e[o].key) { t = o; break } return e.splice(t, 1)[0] }, removeTop: function () { return e.splice(e.length - 1, 1)[0] }, length: function () { return e.length } } } } }).directive("modalBackdrop", ["$timeout", function (e) { return { restrict: "EA", replace: !0, templateUrl: "template/modal/backdrop.html", link: function (n, t, o) { n.backdropClass = o.backdropClass || "", n.animate = !1, e(function () { n.animate = !0 }) } } }]).directive("modalWindow", ["$modalStack", "$timeout", function (e, n) { return { restrict: "EA", scope: { index: "@", animate: "=" }, replace: !0, transclude: !0, templateUrl: function (e, n) { return n.templateUrl || "template/modal/window.html" }, link: function (t, o, a) { o.addClass(a.windowClass || ""), t.size = a.size, n(function () { t.animate = !0, o[0].querySelectorAll("[autofocus]").length || o[0].focus() }), t.close = function (n) { var t = e.getTop(); t && t.value.backdrop && "static" != t.value.backdrop && n.target === n.currentTarget && (n.preventDefault(), n.stopPropagation(), e.dismiss(t.key, "backdrop click")) } } } }]).directive("modalTransclude", function () { return { link: function (e, n, t, o, a) { a(e.$parent, function (e) { n.empty(), n.append(e) }) } } }).factory("$modalStack", ["$transition", "$timeout", "$document", "$compile", "$rootScope", "$$stackedMap", function (e, n, t, o, a, i) { function r() { for (var e = -1, n = p.keys(), t = 0; t < n.length; t++) p.get(n[t]).value.backdrop && (e = t); return e } function l(e) { var n = t.find("body").eq(0), o = p.get(e).value; p.remove(e), s(o.modalDomEl, o.modalScope, 300, function () { o.modalScope.$destroy(), n.toggleClass(m, p.length() > 0), d() }) } function d() { if (c && -1 == r()) { var e = u; s(c, u, 150, function () { e.$destroy(), e = null }), c = void 0, u = void 0 } } function s(t, o, a, i) { function r() { r.done || (r.done = !0, t.remove(), i && i()) } o.animate = !1; var l = e.transitionEndEventName; if (l) { var d = n(r, a); t.bind(l, function () { n.cancel(d), r(), o.$apply() }) } else n(r) } var c, u, m = "modal-open", p = i.createNew(), f = {}; return a.$watch(r, function (e) { u && (u.index = e) }), t.bind("keydown", function (e) { var n; 27 === e.which && (n = p.top(), n && n.value.keyboard && (e.preventDefault(), a.$apply(function () { f.dismiss(n.key, "escape key press") }))) }), f.open = function (e, n) { p.add(e, { deferred: n.deferred, modalScope: n.scope, backdrop: n.backdrop, keyboard: n.keyboard }); var i = t.find("body").eq(0), l = r(); if (l >= 0 && !c) { u = a.$new(!0), u.index = l; var d = angular.element("<div modal-backdrop></div>"); d.attr("backdrop-class", n.backdropClass), c = o(d)(u), i.append(c) } var s = angular.element("<div modal-window></div>"); s.attr({ "template-url": n.windowTemplateUrl, "window-class": n.windowClass, size: n.size, index: p.length() - 1, animate: "animate" }).html(n.content); var f = o(s)(n.scope); p.top().value.modalDomEl = f, i.append(f), i.addClass(m) }, f.close = function (e, n) { var t = p.get(e); t && (t.value.deferred.resolve(n), l(e)) }, f.dismiss = function (e, n) { var t = p.get(e); t && (t.value.deferred.reject(n), l(e)) }, f.dismissAll = function (e) { for (var n = this.getTop() ; n;) this.dismiss(n.key, e), n = this.getTop() }, f.getTop = function () { return p.top() }, f }]).provider("$modal", function () { var e = { options: { backdrop: !0, keyboard: !0 }, $get: ["$injector", "$rootScope", "$q", "$http", "$templateCache", "$controller", "$modalStack", function (n, t, o, a, i, r, l) { function d(e) { return e.template ? o.when(e.template) : a.get(angular.isFunction(e.templateUrl) ? e.templateUrl() : e.templateUrl, { cache: i }).then(function (e) { return e.data }) } function s(e) { var t = []; return angular.forEach(e, function (e) { (angular.isFunction(e) || angular.isArray(e)) && t.push(o.when(n.invoke(e))) }), t } var c = {}; return c.open = function (n) { var a = o.defer(), i = o.defer(), c = { result: a.promise, opened: i.promise, close: function (e) { l.close(c, e) }, dismiss: function (e) { l.dismiss(c, e) } }; if (n = angular.extend({}, e.options, n), n.resolve = n.resolve || {}, !n.template && !n.templateUrl) throw new Error("One of template or templateUrl options is required."); var u = o.all([d(n)].concat(s(n.resolve))); return u.then(function (e) { var o = (n.scope || t).$new(); o.$close = c.close, o.$dismiss = c.dismiss; var i, d = {}, s = 1; n.controller && (d.$scope = o, d.$modalInstance = c, angular.forEach(n.resolve, function (n, t) { d[t] = e[s++] }), i = r(n.controller, d), n.controllerAs && (o[n.controllerAs] = i)), l.open(c, { scope: o, deferred: a, content: e[0], backdrop: n.backdrop, keyboard: n.keyboard, backdropClass: n.backdropClass, windowClass: n.windowClass, windowTemplateUrl: n.windowTemplateUrl, size: n.size }) }, function (e) { a.reject(e) }), u.then(function () { i.resolve(!0) }, function () { i.reject(!1) }), c }, c }] }; return e }), angular.module("template/modal/backdrop.html", []).run(["$templateCache", function (e) { e.put("template/modal/backdrop.html", '<div class="modal-backdrop fade {{ backdropClass }}"\n     ng-class="{in: animate}"\n     ng-style="{\'z-index\': 1040 + (index && 1 || 0) + index*10}"\n></div>\n') }]), angular.module("template/modal/window.html", []).run(["$templateCache", function (e) { e.put("template/modal/window.html", '<div tabindex="-1" role="dialog" class="modal fade" ng-class="{in: animate}" ng-style="{\'z-index\': 1050 + index*10, display: \'block\'}" ng-click="close($event)">\n    <div class="modal-dialog" ng-class="{\'modal-sm\': size == \'sm\', \'modal-lg\': size == \'lg\'}"><div class="modal-content" modal-transclude></div></div>\n</div>') }]);